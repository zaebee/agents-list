# AI Project Manager - Simple Production Docker Image
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*
    && rm -rf /var/lib/apt/lists/*

# Create application directory
WORKDIR /app

# Copy requirements and install dependencies
COPY requirements-minimal.txt .
RUN pip install --upgrade pip
RUN pip install -r requirements-minimal.txt

# Copy application code
COPY . .

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app && chown -R app:app /app
USER app

# Create logs directory
RUN mkdir -p logs data

# Expose port
EXPOSE 5001

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:5001/health || exit 1

# Create startup script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "🚀 Starting AI-CRM Docker Container..."\n\
\n\
# Load environment variables safely\n\
if [ -f ".env.docker" ]; then\n\
    echo "📄 Loading Docker environment configuration"\n\
    set -a\n\
    source .env.docker\n\
    set +a\n\
    echo "✅ Environment variables loaded"\n\
else\n\
    echo "⚠️ No .env.docker file found, using container environment"\n\
fi\n\
\n\
# Initialize database\n\
echo "🔧 Initializing database..."\n\
python3 scripts/docker-init.py\n\
\n\
# Start application\n\
echo "🌐 Starting FastAPI server on port ${PORT:-5001}..."\n\
exec uvicorn api:app --host 0.0.0.0 --port ${PORT:-5001}\n\
' > /app/start.sh && chmod +x /app/start.sh

# Create healthcheck script
RUN echo '#!/bin/bash\ncurl -f http://localhost:5001/health || exit 1' > /app/healthcheck.sh && chmod +x /app/healthcheck.sh

# Run the application
CMD ["/app/start.sh"]
